import { ColdObservable } from './src/rxjs/cold-observable';
import { HotObservable } from './src/rxjs/hot-observable';
export declare type ObservableWithSubscriptions = ColdObservable | HotObservable;
export { Scheduler } from './src/rxjs/scheduler';
declare global {
    namespace jest {
        interface Matchers<R, T> {
            toBeObservable(observable: ObservableWithSubscriptions): void;
            toHaveSubscriptions(marbles: string | string[]): void;
            toHaveNoSubscriptions(): void;
            toBeMarble(marble: string): void;
            toSatisfyOnFlush(func: () => void): void;
        }
    }
}
export declare function hot(marbles: string, values?: any, error?: any): HotObservable;
export declare function cold(marbles: string, values?: any, error?: any): ColdObservable;
export declare function time(marbles: string): number;
